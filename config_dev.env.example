# Hauki environment configuration
# This file defines a set of (environment) variables that configure most
# of the functionality of hauki. In order for hauki to read
# this file, rename it to `config_dev.env`. As the name implies, this
# file is supposed to be used only in development. For production use
# we recommend setting the environment variables using the facilities
# of your runtime environment.
# Hauki reads this file by itself. However, it can also be
# used in conjunction with the included compose.yaml. Then
# you don't need to inject the file into the container. Instead
# Docker defines environment variables that hauki will read.
# Following are the settings and their explanations, with example values
# that might be useful for development:

# Whether to run Django in debug mode
# Django setting: DEBUG https://docs.djangoproject.com/en/3.0/ref/settings/#debug
DEBUG=True

# Level of Django logging. This variable only has effect if DEBUG=True. In that case,
# all events above the given level will be logged.
# Django setting: DJANGO_LOG_LEVEL https://docs.djangoproject.com/en/3.0/topics/logging/#examples
DJANGO_LOG_LEVEL=INFO

# Maximum age of Django db connection. The default Django setting closes the db connection after
# after each request, which may cause slowdown in case the db backend is slow to establish
# connections.
CONN_MAX_AGE=0

# Namespace ID used for data added through the API. All objects originating
# in Hauki API itself will have their "data_source" field set to this value and
# their identifier will be prefixed by this value.
#SYSTEM_DATA_SOURCE_ID=hauki

# Languages that this Hauki instance will support. This affects
# several things and cannot be changed nilly-willy. Most importantly,
# you will need to run `manage.py sync_translation_fields` after
# changing this.
# Django setting: LANGUAGES https://docs.djangoproject.com/en/3.0/ref/settings/#languages
#LANGUAGES=fi,sv,en

# Configures database for Hauki using URL style. Format is:
# postgres://USER:PASSWORD@HOST:PORT/NAME
# Unused components may be left out, only Postgres is supported
# The example below configures Hauki to use local PostgreSQL database
# called "hauki", connecting same as username as Django is running as.
# Django setting: DATABASES (but not directly) https://docs.djangoproject.com/en/3.0/ref/settings/#databases
#DATABASE_URL=postgres:///hauki

# Hauki will use JWT tokens for authentication. This settings Specifies
# the value that must be present in the "aud"-key of the token presented
# by a client when making an authenticated request. Hauki uses this
# key for verifying that the token was meant for accessing this particular
# Hauki instance (the tokens are signed, see below).
# Does not correspond to standard Django setting
#TOKEN_AUTH_ACCEPTED_AUDIENCE=string-identifying-this-hauki-instance

# This key will be used by Hauki to verify the JWT token is from trusted
# Identity Provider (OpenID terminology). The provider must have signed
# the JWT TOKEN using this shared secret
# Does not correspond to standard Django setting
#TOKEN_AUTH_SHARED_SECRET=abcdefghacbdefgabcdefghacbdefgabcdefghacbdefgabcdefghacbdefgabcdefghacbdefg

# Secret used for various functions within Django. This setting is
# mandatory for Django, but Hauki will generate a key, if it is not
# defined here. Currently Hauki does not use any functionality that
# needs this.
# Django setting: SECRET_KEY https://docs.djangoproject.com/en/3.0/ref/settings/#secret-key
#SECRET_KEY=

# List of Host-values, that Hauki will accept in requests.
# This setting is a Django protection measure against HTTP Host-header attacks
# https://docs.djangoproject.com/en/3.0/topics/security/#host-headers-virtual-hosting
# Specified as a comma separated list of allowed values. Note that this does
# NOT matter if you are running with DEBUG
# Django setting: ALLOWED_HOSTS https://docs.djangoproject.com/en/3.0/ref/settings/#allowed-hosts
#ALLOWED_HOSTS=api.hel.ninja,hauki-api.hel.ninja

# List of tuples (or just e-mail addresses) specifying Administrators of this
# Hauki instance. Django uses this only when logging is configured to
# send exceptions to admins. Hauki does not do this. Still you may want
# to set this for documentation
# Django setting: ADMINS https://docs.djangoproject.com/en/3.0/ref/settings/#admins
ADMINS=admin@this.hauki.instance,another-admin@this.hauki.instance

# Cookie prefix is added to the every cookie set by Hauki. These are
# mostly used when accessing the internal Django admin site. This applies
# to django session cookie and csrf cookie
# Django setting: prepended to CSRF_COOKIE_NAME and SESSION_COOKIE_NAME
COOKIE_PREFIX=hauki

# Django INTERNAL_IPS setting allows some debugging aids for the addresses
# specified here
# DJango setting: INTERNAL_IPS https://docs.djangoproject.com/en/3.0/ref/settings/#internal-ips
INTERNAL_IPS=127.0.0.1

# Specifies a header that is trusted to indicate that the request was using
# https while traversing over the Internet at large. This is used when
# a proxy terminates the TLS connection and forwards the request over
# a secure network. Specified using a tuple.
# Django setting: SECURE_PROXY_SSL_HEADER https://docs.djangoproject.com/en/3.0/ref/settings/#secure-proxy-ssl-header
#SECURE_PROXY_SSL_HEADER=('HTTP_X_FORWARDED_PROTO', 'https')

# Media root is the place in file system where Django and, by extension
# Hauki stores "uploaded" files. This means any and all files
# that are inputted through importers or API, if such files are ever present.
# Django setting: MEDIA_ROOT https://docs.djangoproject.com/en/3.0/ref/settings/#media-root
#MEDIA_ROOT=/home/hauki/media

# Static root is the place where Hauki will install any static
# files that need to be served to clients. For Hauki this is mostly
# JS and CSS for the API exploration interface + admin
# Django setting: STATIC_ROOT
#STATIC_ROOT=/home/hauki/static

# Media URL is address (URL) where users can access files in MEDIA_ROOT
# through http. Ie. where your uploaded files are publicly accessible.
# In the simple case this is a relative URL to same server as API
# Django setting: MEDIA_URL https://docs.djangoproject.com/en/3.0/ref/settings/#media-url
MEDIA_URL=/media/

# Static URL is address (URL) where users can access files in STATIC_ROOT
# through http. Same factors apply as to MEDIA_URL
# Django setting: STATIC_URL https://docs.djangoproject.com/en/3.0/ref/settings/#static-url
STATIC_URL=/static/

# Specifies that Django is to use `X-Forwarded-Host` as it would normally
# use the `Host`-header. This is necessary when `Host`-header is used for
# routing the requests in a network of reverse proxies. `X-Forwarded-Host`
# is then used to carry the Host-header value supplied by the origin client.
# This affects how ALLOWED_HOSTS behaves, as well.
# Django setting: https://docs.djangoproject.com/en/3.0/ref/settings/#use-x-forwarded-host
# TRUST_X_FORWARDED_HOST=False

# Sentry is an error tracking sentry (sentry.io) that can be self hosted
# or purchased as PaaS. SENTRY_DSN setting specifies the URL where reports
# for this Hauki instance should be sent. You can find this in
# your Sentry interface (or through its API)
#SENTRY_DSN=http://your.sentry.here/fsdafads/13

# Sentry environment is an optional tag that can be included in sentry
# reports. It is used to separate deployments within Sentry UI
SENTRY_ENVIRONMENT=local-development-unconfigured

# Mailgun API credentials
# If Hauki incorporates the django notificator app https://github.com/City-of-Helsinki/django-ilmoitin,
# the following settings (or similar ones) may be needed.
#MAIL_MAILGUN_KEY=key
#MAIL_MAILGUN_DOMAIN=do.main.com
#MAIL_MAILGUN_API=https://mail.gun.api/

# The default value for Resource.timezone field
#RESOURCE_DEFAULT_TIMEZONE=Europe/Helsinki
